---
# tasks file for managing script-based tools in terminal_setup

- name: Manage script-based tool
  block:
    - name: Install dependencies for script-based tool
      ansible.builtin.package:
        name: "{{ tool.dependencies[ansible_os_family] }}"
        state: present
      become: "{{ ansible_os_family != 'Darwin' }}"
      when:
        - tool.dependencies is defined
        - tool.dependencies[ansible_os_family] is defined

    - name: Stat install dir for tool
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/.{{ tool.name }}"
      register: tool_dir_stat

    - name: Stat .git dir for tool
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/.{{ tool.name }}/.git"
      register: tool_git_stat
      when: tool_dir_stat.stat.exists

    - name: Fail if tool directory exists but is not a git repo
      ansible.builtin.fail:
        msg: |
          ~/.{{ tool.name }} exists but is not a git repository.
          Please back up and remove it, or migrate it to a git-managed install before running this playbook.
      when:
        - tool_dir_stat.stat.exists
        - not tool_git_stat.stat.exists

    - name: Clone tool from git repo
      ansible.builtin.git:
        repo: "{{ tool.git_repo }}"
        dest: "{{ ansible_user_dir }}/.{{ tool.name }}"
        version: "{{ tool.version }}"
        accept_hostkey: true
        force: false
      register: git_clone_result


    - name: Show git clone result
      ansible.builtin.debug:
        var: git_clone_result
      when: git_clone_result.changed

  when: (tool.state | default('present')) == 'present'
