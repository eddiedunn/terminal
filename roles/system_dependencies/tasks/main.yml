---
# tasks/main.yml for system_dependencies

- name: Fail if required variables are not defined
  ansible.builtin.fail:
    msg: "system_dependencies_tools and system_dependencies_all_definitions must be defined."
  when: system_dependencies_tools is not defined or system_dependencies_all_definitions is not defined

- name: "Build list of required system packages"
  ansible.builtin.set_fact:
    apt_packages: >-
      {{ apt_packages | default([]) + (item.dependencies | default({})).get('Debian', []) }}
    brew_packages: >-
      {{ brew_packages | default([]) + (item.dependencies | default({})).get('Darwin', []) }}
  loop: "{{ system_dependencies_all_definitions | selectattr('name', 'in', system_dependencies_tools) | list }}"
  loop_control:
    loop_var: item
    label: "{{ item.name }}"

- name: Install system dependencies for requested tools (Debian/Ubuntu)
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop: "{{ apt_packages | default([]) | unique }}"
  when: ansible_facts['os_family'] == 'Debian' and apt_packages is defined and apt_packages | length > 0
  become: true

- name: Install system dependencies for requested tools (macOS)
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop: "{{ brew_packages | default([]) | unique }}"
  when: ansible_facts['os_family'] == 'Darwin' and brew_packages is defined and brew_packages | length > 0
  become: false
