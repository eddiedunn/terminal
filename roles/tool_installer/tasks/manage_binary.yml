---
- name: "Set platform-specific binary facts for {{ tool.name }}"
  ansible.builtin.set_fact:
    tool_bin_src: >-
      {{ terminal_artifact_cache_dir | default('/tmp/terminal-ansible-artifacts') }}/{{ ansible_system | lower }}/{{ ansible_architecture_normalized }}/{{ tool.name }}/{{ tool.version }}/{{ tool.executable_name | default(tool.name) }}-{{ tool.version }}
    tool_bin_dest_versioned: "{{ ansible_user_dir }}/.local/bin/{{ tool.executable_name | default(tool.name) }}-{{ tool.version }}"
    tool_bin_dest_unversioned: "{{ ansible_user_dir }}/.local/bin/{{ tool.executable_name | default(tool.name) }}"

- name: "Check if pre-downloaded binary exists"
  ansible.builtin.stat:
    path: "{{ tool_bin_src }}"
  register: tool_bin_stat
  delegate_to: localhost

- name: "Copy binary to user's bin directory for {{ tool.name }}"
  ansible.builtin.copy:
    src: "{{ tool_bin_src }}"
    dest: "{{ tool_bin_dest_versioned }}"
    mode: '0755'

- name: "Create/update main symlink to point to versioned binary"
  ansible.builtin.file:
    src: "{{ tool_bin_dest_versioned }}"
    dest: "{{ tool_bin_dest_unversioned }}"
    state: link
    force: true

- name: "Create/update convenience symlink if defined (e.g. rg -> ripgrep)"
  ansible.builtin.file:
    src: "{{ tool_bin_dest_unversioned }}"
    dest: "{{ ansible_user_dir }}/.local/bin/{{ tool.symlink_as }}"
    state: link
    force: true
  when: tool.symlink_as is defined

    - name: "Create/update main symlink to point to versioned binary"
      ansible.builtin.file:
        src: "{{ tool_bin_dest_path_versioned }}"
        dest: "{{ tool_bin_dest_path_unversioned }}"
        state: link
        force: true

    - name: "Create/update convenience symlink if defined (e.g. rg -> ripgrep)"
      ansible.builtin.file:
        src: "{{ tool_bin_dest_path_unversioned }}"
        dest: "{{ ansible_user_dir }}/.local/bin/{{ tool.symlink_as }}"
        state: link
        force: true
      when: tool.symlink_as is defined
