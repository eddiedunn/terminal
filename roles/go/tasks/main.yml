---
- name: "Go | Ensure Go installation and project directories exist"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ go_root }}"
    - "{{ go_path }}"
    - "{{ go_bin }}"

- name: "Go | Check if the correct version of Go is already installed"
  ansible.builtin.stat:
    path: "{{ go_root }}/VERSION"
  register: go_version_file

- name: "Go | Download and install Go"
  when: not go_version_file.stat.exists or (go_version not in (lookup('file', go_version_file.stat.path, errors='ignore') | default('')))
  block:
    - name: "Go | Download Go binary archive"
      ansible.builtin.get_url:
        url: "{{ go_download_url }}"
        dest: "/tmp/go{{ go_version }}.tar.gz"
        mode: '0644'
      register: go_download

    - name: "Go | Fail if gtar is not present on macOS"
      ansible.builtin.stat:
        path: "/opt/homebrew/bin/gtar"
      register: gtar_stat
      when: ansible_system == "Darwin"

    - name: "Go | Abort if gtar is not installed (Homebrew)"
      ansible.builtin.fail:
        msg: |
          GNU tar (gtar) is required but was not found at /opt/homebrew/bin/gtar.\n
          Please ensure Homebrew is installed and run:\n
              brew install gnu-tar\n
          Then re-run this playbook.
      when: ansible_system == "Darwin" and not gtar_stat.stat.exists

    - name: "Go | Unarchive Go on Linux"
      ansible.builtin.unarchive:
        src: "{{ go_download.dest }}"
        dest: "{{ ansible_user_dir }}/.local"
        remote_src: true
        creates: "{{ go_root }}/bin/go"
      when: ansible_system == "Linux"

    - name: "Go | Extract archive with gtar on macOS"
      ansible.builtin.command:
        cmd: "/opt/homebrew/bin/gtar -xzf {{ go_download.dest }} -C {{ ansible_user_dir }}/.local"
      args:
        creates: "{{ go_root }}/bin/go"
      when: ansible_system == "Darwin"

- name: "Go | Ensure Go binary is symlinked into the user's bin directory"
  ansible.builtin.file:
    src: "{{ go_root }}/bin/go"
    dest: "{{ ansible_user_dir }}/.local/bin/go"
    state: link
    force: true

- name: "Go | Deploy Go environment init script"
  ansible.builtin.template:
    src: "go.sh.j2"
    dest: "{{ ansible_user_dir }}/.config/shell_init.d/20_go.sh"
    mode: '0755'
