---
# defaults file for your_namespace.terminal.user_setup

# User-configurable aliases and environment variables
user_setup_custom_aliases: {}
user_setup_environment_variables:
  EDITOR: vim

# Git user configuration
user_setup_git_email: "user@example.com"
user_setup_git_name: "Ansible User"

# Optional: install system dependencies for nvm/pyenv/rustup (see README)
# user_setup_install_dependencies: false

# Internal variables
user_setup_managed_block_marker: "# {mark} ANSIBLE MANAGED BLOCK (user_setup)"
# --- Role Behavior ---
user_setup_enabled: true
user_setup_staging_dir: "{{ ansible_env.HOME }}/.local/staging"
user_setup_bin_dir: "{{ ansible_env.HOME }}/.local/bin"
user_setup_shell_type: "bash" # This is overridden to 'zsh' automatically on macOS by tasks/main.yml
user_setup_deploy_config_yaml: false

# --- Master Tool Definitions (Role-Internal) ---
# This is the single source of truth for all available tools and their properties.
# The role processes this list, not the user.
user_setup_tools_defaults:
  # Existing tools ...
  - name: nvm
    version: "v0.40.3"
    description: "Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions."
    install_type: script
    git_repo: "https://github.com/nvm-sh/nvm.git"
    init_snippet: |
      export NVM_DIR="$HOME/.nvm"
      if [ -s "$NVM_DIR/nvm.sh" ]; then
        . "$NVM_DIR/nvm.sh"  # This loads nvm
      fi
      if [ -s "$NVM_DIR/bash_completion" ]; then
        . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
      fi

  - name: pyenv
    version: "v2.6.3"
    description: "Python Version Manager - lets you easily switch between multiple versions of Python."
    install_type: script
    git_repo: "https://github.com/pyenv/pyenv.git"
    dependencies:
      Debian:
        - build-essential
        - libssl-dev
        - zlib1g-dev
        - libbz2-dev
        - libreadline-dev
        - libsqlite3-dev
        - curl
        - libncursesw5-dev
        - xz-utils
        - tk-dev
        - libxml2-dev
        - libxmlsec1-dev
        - libffi-dev
        - liblzma-dev
      Darwin:
        - openssl
        - readline
        - sqlite3
        - xz
        - zlib
        - tcl-tk
    init_snippet: |
      if [ -d "$HOME/.pyenv" ]; then
        export PYENV_ROOT="$HOME/.pyenv"
        command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
      fi
  - name: starship
    version: "1.18.0"
    description: "The minimal, blazing-fast, and infinitely customizable prompt for any shell."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/starship/starship/releases/download/v{version}/starship-aarch64-apple-darwin.tar.gz"
          executable_in_archive: "starship"
    config_file: "starship.toml"
    config_dir: "" # This is redundant but explicit
    init_snippet: 'eval "$(starship init {shell_type_resolved})"'

  - name: ripgrep
    version: "14.1.0"
    description: "A fast line-oriented search tool that recursively searches your current directory for a regex pattern."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/BurntSushi/ripgrep/releases/download/{version}/ripgrep-{version}-aarch64-apple-darwin.tar.gz"
          executable_in_archive: "rg"
    aliases:
      grep: "rg --color=auto"
    symlink_as: "rg"

  - name: sheldon
    version: "0.8.2"
    description: "A fast, configurable, shell plugin manager."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/rossmacarthur/sheldon/releases/download/v{version}/sheldon-{version}-aarch64-apple-darwin.tar.gz"
          executable_in_archive: "sheldon"
    config_file: "plugins.toml"
    config_dir: "sheldon"
    init_snippet: 'eval "$(sheldon source)"'

  - name: fzf
    version: "0.62.0"
    description: "A command-line fuzzy finder."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/junegunn/fzf/releases/download/v0.62.0/fzf-0.62.0-darwin_arm64.tar.gz"
          executable_in_archive: "fzf"
    env_vars:
      FZF_DEFAULT_OPTS: "--height 40% --layout=reverse --border"

  - name: bat
    version: "0.25.0"
    description: "A cat(1) clone with wings."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/sharkdp/bat/releases/download/v0.25.0/bat-v0.25.0-aarch64-apple-darwin.tar.gz"
          executable_in_archive: "bat"
    aliases:
      cat: "bat --paging=never"
    vimrc: |
      " Use bat as the pager for man pages if available
      if executable('bat')
        set keywordprg=bat\ -p
      endif

  - name: eza
    version: "0.21.4"
    description: "A modern replacement for ls."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/eddiedunn/eza/releases/download/v{version}-darwin/eza"
          executable_in_archive: "eza"
    aliases:
      ls: "eza --group-directories-first --color=always"
      ll: "eza -l --group-directories-first --color=always"
      la: "eza -la --group-directories-first --color=always"

  - name: zoxide
    version: "0.9.8"
    description: "A smarter cd command."
    install_type: binary
    executable_name: zoxide
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/ajeetdsouza/zoxide/releases/download/v{version}/zoxide-{version}-aarch64-apple-darwin.tar.gz"
          executable_in_archive: "zoxide"
    init_snippet: 'eval "$(zoxide init {shell_type_resolved} --cmd z)"'

  - name: direnv
    version: "2.33.0"
    description: "An environment switcher for the shell."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/direnv/direnv/releases/download/v{version}/direnv.darwin-arm64"
          executable_in_archive: "direnv"
    init_snippet: 'eval "$(direnv hook {shell_type_resolved})"'
    gitignore: |
      # Direnv state files
      .direnv/
    env_vars:
      DIRENV_LOG_FORMAT: ""

  - name: uv
    version: "0.7.13"
    description: "Extremely fast Python package manager and build frontend (Rust implementation)."
    install_type: binary
    binaries:
      Darwin:
        aarch64:
          url: "https://github.com/astral-sh/uv/releases/download/{version}/uv-aarch64-apple-darwin.tar.gz"
          executable_in_archive: "uv"
    init_snippet: ''

  - name: rustup
    version: "stable"
    description: "The Rust toolchain installer and version manager."
    install_type: rustup
    installer_url: "https://sh.rustup.rs"
    dependencies:
      Debian:
        - build-essential
        - curl
        - pkg-config
        - libssl-dev
      Darwin:
        - curl

# --- Sheldon Plugins (Zsh only) ---
# A dedicated list for plugins managed by Sheldon.
user_setup_sheldon_plugins:
  - name: zsh-autosuggestions
    github: "zsh-users/zsh-autosuggestions"

  - name: zsh-syntax-highlighting
    github: "zsh-users/zsh-syntax-highlighting"
  - name: zsh-completions
    github: "zsh-users/zsh-completions"
  - name: mac-zsh-completions
    github: "scriptingosx/mac-zsh-completions"
    apply: ["source"]
    when: "ansible_os_family == 'Darwin'"
  - name: fzf-zsh-plugin
    github: "junegunn/fzf"
    apply: ["source"]
  - name: base16
    github: "chriskempson/base16-shell"
